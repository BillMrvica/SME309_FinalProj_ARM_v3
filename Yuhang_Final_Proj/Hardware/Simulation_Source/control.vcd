$date
	Tue Oct 24 14:36:02 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Control_tb $end
$var wire 1 ! RegWrite $end
$var wire 2 " RegSrc [1:0] $end
$var wire 1 # PCSrc $end
$var wire 1 $ MemtoReg $end
$var wire 1 % MemWrite $end
$var wire 2 & ImmSrc [1:0] $end
$var wire 1 ' ALUSrc $end
$var wire 2 ( ALUControl [1:0] $end
$var reg 4 ) ALUFlags [3:0] $end
$var reg 32 * Instr [31:0] $end
$var reg 1 + clk $end
$scope module u_ControlUnit $end
$var wire 4 , ALUFlags [3:0] $end
$var wire 1 + CLK $end
$var wire 32 - Instr [31:0] $end
$var wire 1 ! RegWrite $end
$var wire 1 . RegW $end
$var wire 2 / RegSrc [1:0] $end
$var wire 1 # PCSrc $end
$var wire 1 0 PCS $end
$var wire 1 $ MemtoReg $end
$var wire 1 % MemWrite $end
$var wire 1 1 MemW $end
$var wire 2 2 ImmSrc [1:0] $end
$var wire 2 3 FlagW [1:0] $end
$var wire 4 4 Cond [3:0] $end
$var wire 1 ' ALUSrc $end
$var wire 2 5 ALUControl [1:0] $end
$scope module CondLogic1 $end
$var wire 4 6 ALUFlags [3:0] $end
$var wire 1 + CLK $end
$var wire 4 7 Cond [3:0] $end
$var wire 1 % MemWrite $end
$var wire 1 # PCSrc $end
$var wire 1 ! RegWrite $end
$var wire 1 . RegW $end
$var wire 1 0 PCS $end
$var wire 1 1 MemW $end
$var wire 2 8 FlagW [1:0] $end
$var reg 1 9 C $end
$var reg 1 : CondEx $end
$var reg 1 ; N $end
$var reg 1 < V $end
$var reg 1 = Z $end
$upscope $end
$scope module Decoder1 $end
$var wire 1 ' ALUSrc $end
$var wire 32 > Instr [31:0] $end
$var wire 1 1 MemW $end
$var wire 1 $ MemtoReg $end
$var wire 1 0 PCS $end
$var wire 1 . RegW $end
$var wire 3 ? op [2:0] $end
$var wire 6 @ funct [5:0] $end
$var wire 2 A RegSrc [1:0] $end
$var wire 4 B Rd [3:0] $end
$var wire 1 C MEM $end
$var wire 2 D ImmSrc [1:0] $end
$var wire 1 E DP $end
$var wire 1 F Branch $end
$var reg 2 G ALUControl [1:0] $end
$var reg 2 H FlagW [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 H
b10 G
0F
1E
b0 D
0C
b0 B
b0 A
b0 @
b0 ?
b0 >
0=
0<
0;
0:
09
b0 8
b0 7
b0 6
b10 5
b0 4
b0 3
b0 2
01
00
b0 /
1.
b0 -
b0 ,
1+
b0 *
b0 )
b10 (
0'
b0 &
0%
0$
0#
b0 "
0!
$end
#5000
0+
#10000
b0 (
b0 5
b0 G
b1110 4
b1110 7
b1000 @
b1 B
1+
b11100000100000100001000000000011 *
b11100000100000100001000000000011 -
b11100000100000100001000000000011 >
#15000
0+
#20000
1'
b1 (
b1 5
b1 G
b100100 @
b10 B
1+
b11100010010000110010111011111111 *
b11100010010000110010111011111111 -
b11100010010000110010111011111111 >
#25000
0+
#30000
b1 &
b1 2
b1 D
b10 "
b10 /
b10 A
11
0E
1C
b0 3
b0 8
b0 H
b0 (
b0 5
b0 G
b1 ?
b11001 @
b101 B
1+
b11100101100110110101000000000100 *
b11100101100110110101000000000100 -
b11100101100110110101000000000100 >
#35000
0+
#40000
b10 &
b10 2
b10 D
0.
b1 "
b1 /
b1 A
01
1F
0C
10
b10 ?
b111111 @
b1111 B
1+
b11101011111111111111111111111010 *
b11101011111111111111111111111010 -
b11101011111111111111111111111010 >
#45000
0+
#50000
1+
#55000
0+
#60000
1+
#65000
0+
#70000
1+
#75000
0+
#80000
1+
#85000
0+
#90000
1+
#95000
0+
#100000
1+
#105000
0+
#110000
1+
#115000
0+
#120000
1+
#125000
0+
#130000
1+
#135000
0+
#140000
1+
